name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel
    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install --deploy --dev
    - name: Run Tests
      run: |
        pipenv run python manage.py test
      env:
        TEST_DB_HOST: localhost
        TEST_DB_NAME: postgres
        TEST_DB_PASS: postgres
        TEST_DB_PORT: 5432
        TEST_DB_USER: postgres
        SECRET_KEY: MYSECRETKEY

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "pencilmark-bff"
          heroku_email: "iselda01@luther.edu"

